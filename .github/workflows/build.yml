name: hikairi ollvm


on:
 push:
   branches: [llvm-18.1.8rel]
   
 workflow_dispatch:
   
jobs:
 
 windows:
    name: Build for Windows
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: make diffutils unzip gzip cmake ninja git
          pacboy: 7zip:p python:p cmake:p gcc:p ninja:p zstd:p clang:p lld:p

      - name: Build toolchain
        run: |
         git submodule init 
         git submodule update
         mkdir build
         cd build
         cmake -G "Ninja" -DLLVM_ENABLE_PROJECTS="clang;lld" -DCMAKE_BUILD_TYPE=Release -DLLVM_INCLUDE_TESTS=OFF -DLLVM_ENABLE_NEW_PASS_MANAGER=TRUE -DLLVM_BUILD_STATIC=ON ../llvm
         ninja -j12
      
         linux:
         name: Build for Linux
         runs-on: ubuntu-20.04

      
         steps:
           - name: Check out
             uses: actions/checkout@v4
             with:
             fetch-depth: 1
          
           - name: Set up Python 3
             uses: actions/setup-python@v5
             with:
             python-version: "3.x"

           - name: Build toolchain
             run: |
             sudo apt-get -y install cmake ninja-build libzstd-dev binutils-dev gcc git python3 golang
             git submodule init 
             git submodule update
             mkdir linux-build
             cd linux-build
             cmake -G "Ninja" -DLLVM_ENABLE_PROJECTS="clang;lld" -DCMAKE_BUILD_TYPE=Release -DLLVM_INCLUDE_TESTS=OFF -DLLVM_ENABLE_NEW_PASS_MANAGER=TRUE -DLLVM_BUILD_STATIC=ON ../llvm
             ninja -j14
